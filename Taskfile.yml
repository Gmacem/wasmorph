version: '3'

vars:
  ENV_FILE: ".env.test"

tasks:
  test:
    desc: "Run all tests"
    cmds:
      - task: test-unit
      - task: test-integration

  test-unit:
    desc: "Run unit tests"
    cmds:
      - go test -v {{.CLI_ARGS}} ./internal/...

  test-integration:
    desc: "Run integration tests with running server"
    cmds:
      - task: start-postgres
      - sleep 3
      - env $(cat {{.ENV_FILE}} | xargs) task migrate-up
      - task: start-server
      - task: wait-for-server
      - |
        set -e
        trap 'echo "Cleaning up..."; task stop-server; task cleanup-postgres' EXIT
        env $(cat {{.ENV_FILE}} | xargs) go test -v {{.CLI_ARGS}} ./tests/...

  wait-for-server:
    desc: "Wait for server to be ready"
    cmds:
      - |
        for i in {1..30}; do
          if curl -f http://localhost:8080/health >/dev/null 2>&1; then
            echo "Server is ready!"
            break
          fi
          if [ $i -eq 30 ]; then
            echo "Server failed to start"
            exit 1
          fi
          sleep 1
        done

  start-server:
    desc: "Start wasmorph server"
    cmds:
      - task: stop-server
      - go build -o /tmp/wasmorph-server cmd/server/main.go
      - nohup env $(cat {{.ENV_FILE}} | xargs) /tmp/wasmorph-server > /tmp/wasmorph-server.log 2>&1 &

  stop-server:
    desc: "Stop wasmorph server"
    cmds:
      - pkill -f "/tmp/wasmorph-server" >/dev/null 2>&1 || true

  start-postgres:
    desc: "Start PostgreSQL container"
    cmds:
      - task: cleanup-postgres
      - docker run -d --name wasmorph-postgres --rm -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=test -e POSTGRES_DB=wasmorph_test -p 5433:5432 postgres:15
      - task: wait-for-postgres

  wait-for-postgres:
    desc: "Wait for PostgreSQL to be ready"
    cmds:
      - |
        echo "Waiting for PostgreSQL to be ready..."
        for i in {1..60}; do
          if docker exec wasmorph-postgres pg_isready -U postgres -d wasmorph_test >/dev/null 2>&1; then
            echo "PostgreSQL is ready!"
            break
          fi
          if [ $i -eq 60 ]; then
            echo "PostgreSQL failed to start after 60 seconds"
            docker logs wasmorph-postgres --tail 20
            exit 1
          fi
          echo "Attempt $i/60: PostgreSQL not ready yet..."
          sleep 1
        done

  cleanup-postgres:
    desc: "Force cleanup all PostgreSQL containers"
    cmds:
      - docker ps -q --filter "name=wasmorph-postgres" | xargs -r docker kill >/dev/null 2>&1 || true
      - docker ps -aq --filter "name=wasmorph-postgres" | xargs -r docker rm -f >/dev/null 2>&1 || true
      - docker stop wasmorph-postgres >/dev/null 2>&1 || true
      - docker rm -f wasmorph-postgres >/dev/null 2>&1 || true

  migrate-up:
    desc: "Run database migrations"
    cmds:
      - migrate -path migrations -database "{{.DATABASE_URL}}" up

  migrate-down:
    desc: "Rollback database migrations"
    cmds:
      - migrate -path migrations -database "{{.DATABASE_URL}}" down 1
